@model MVCPresentation.Models.StatViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Editing @Model.Name</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>StatViewModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div>
        <ul>
            @foreach (var stat in Model.AliasList)
            {
                {
                    <li>
                        <strong>
                            @stat @Html.ActionLink("Remove Alias", "RemoveAliasFromStat", new { statName = Model.Name, aliasToRemove = stat })
                        </strong>
                        @if (Model.Name.Equals(stat))
                        {
                            <span style="color: red; font-weight: bold"> System Stat</span>
                        }
                    </li>
                }
            }
        </ul>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.NewAlias, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NewAlias, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NewAlias, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
