@model MVCPresentation.Models.ItemMVCModel

@{
    ViewBag.Title = "EditStats";
}

<h2>Editing Stats for @Model.ItemName</h2>

<div>
    <ul>
        @foreach (var stat in Model.ItemStats)
        {
            {
                <li>
                    @stat
                    <strong>
                        @stat @Html.ActionLink("Remove Stat", "RemoveStatFromItem", new { itemID = Model.ItemID, statToRemove = stat.Key })
                    </strong>
                    @if (Model.ItemName.Equals(stat))
                    {
                <span style="color: red; font-weight: bold">@ViewBag.Error</span>
                    }
                </li>
            }
        }
    </ul>
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ItemMVCModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.ItemID)
        @Html.HiddenFor(model => model.OldItemID)
        @Html.HiddenFor(model => model.ItemName)
        @Html.HiddenFor(model => model.OldItemName)
        @*@Html.HiddenFor(model => model.ItemStats)*@

        <div class="form-group">
            @Html.LabelFor(model => model.NewStatName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(Model => Model.NewStatName,
                    new SelectList((IEnumerable<String>)ViewBag.Aliases),
                    new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.NewStatName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.NewStatValue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewStatValue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewStatValue, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
